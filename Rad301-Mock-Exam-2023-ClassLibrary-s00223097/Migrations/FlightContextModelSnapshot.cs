// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rad301mockexam;

#nullable disable

namespace Rad301_Mock_Exam_2023_ClassLibrary_s00223097.Migrations
{
    [DbContext(typeof(FlightContext))]
    partial class FlightContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rad301mockexam.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            Country = "Italy",
                            DepartureDate = new DateTime(2021, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Rome",
                            FlightNumber = "IT-001",
                            MaxSeats = 110,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightId = 2,
                            Country = "England",
                            DepartureDate = new DateTime(2022, 1, 23, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            Destination = "London",
                            FlightNumber = "EN-002",
                            MaxSeats = 110,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightId = 3,
                            Country = "France",
                            DepartureDate = new DateTime(2022, 1, 4, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Paris",
                            FlightNumber = "FR-001",
                            MaxSeats = 120,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightId = 4,
                            Country = "Belgium",
                            DepartureDate = new DateTime(2022, 1, 5, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Brussels",
                            FlightNumber = "BE-001",
                            MaxSeats = 88,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightId = 5,
                            Country = "Ireland",
                            DepartureDate = new DateTime(2022, 1, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Dublin",
                            FlightNumber = "DU-001",
                            MaxSeats = 110,
                            Origin = "London"
                        });
                });

            modelBuilder.Entity("rad301mockexam.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerId"));

                    b.Property<decimal>("BaggageCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TicketCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PassengerId");

                    b.HasIndex("FlightId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerId = 1,
                            BaggageCharge = 30.00m,
                            FlightId = 2,
                            Name = "Fred Farnell",
                            TicketCost = 51.83m,
                            TicketType = "Economy"
                        },
                        new
                        {
                            PassengerId = 2,
                            BaggageCharge = 10.00m,
                            FlightId = 2,
                            Name = "Tom Mc Manus",
                            TicketCost = 127.00m,
                            TicketType = "First Class"
                        },
                        new
                        {
                            PassengerId = 3,
                            BaggageCharge = 10.00m,
                            FlightId = 3,
                            Name = "Bill Trimble",
                            TicketCost = 140.00m,
                            TicketType = "First Class"
                        },
                        new
                        {
                            PassengerId = 4,
                            BaggageCharge = 15.00m,
                            FlightId = 4,
                            Name = "Freda Mc Donald",
                            TicketCost = 50.92m,
                            TicketType = "Economy"
                        },
                        new
                        {
                            PassengerId = 5,
                            BaggageCharge = 15.00m,
                            FlightId = 1,
                            Name = "Mary Malone",
                            TicketCost = 66.22m,
                            TicketType = "Economy"
                        },
                        new
                        {
                            PassengerId = 6,
                            BaggageCharge = 10.00m,
                            FlightId = 5,
                            Name = "Tom Mc Manus",
                            TicketCost = 127.00m,
                            TicketType = "First Class"
                        });
                });

            modelBuilder.Entity("rad301mockexam.Passenger", b =>
                {
                    b.HasOne("rad301mockexam.Flight", "Flight")
                        .WithMany("Passengers")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("rad301mockexam.Flight", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
